package uk.co.n3tw0rk.oaigatewayrelay.events.system;

/**
 * 
 * @author M00SEMARKTWO

ALARM GENERATION – AG
NOTE: This event is available only in protocol versions 07.00 and later.
USE: Occurs whenever an alarm is generated. By default, the alarm generation event is disabled by
system filtering. To enable alarm generation events, enable system filtering using one of the
following commands: _MS (see page 128), _MA (see page 135), or _CE (see page 97). To verify
the bit is set, send the _QE command, which returns the new bit in the confirmation.
NOTE: For protocol versions 08.20 or later, this event is also generated on a Resync
Request (_RR or RR).
MONITOR TYPE: System
SYNTAX: AG,<Resync_Code>,<Mon_Cross_Ref_ID>,<System_ID>,<Network_Node_Number>,
<Affected_Ext>,<Alarm_Number>,<Alarm_Text>,<Unique_ID><CR><LF>
Where:
• System_ID: Indicates where the alarm was generated. Possible values include:
1= The alarm was generated by the phone system.
2 = The alarm was generated by the CT Gateway (reserved for future use).
• Network_Node_Number: Indicates the phone system node number if the alarm is generated
by the phone system (<System_ID> =1). Possible values include:
N = The system is networked, and the node number is displayed.
1 = The system is not networked.
0 = The alarm was generated by the CT Gateway (reserved for future use).
• Affected_Ext: Indicates the extension number of the device associated with the alarm or
the station that cleared the alarm. This field is empty if the affected extension cannot be
determined.
• Alarm_Number: Indicates the alarm number. Refer to the Message Print Diagnostics
Manual (Issue 9.0) for a list of alarm numbers and their corresponding descriptions.
• Alarm_Text: Indicates the description of the alarm and matches the text generated by
Message Print. Refer to the Message Print Diagnostics Manual (Issue 9.0) for a list of
alarm numbers and their corresponding descriptions.
• Unique_ID: Indicates a system-generated ID that is specific to the alarm. Applications
use this ID to determine exactly when each alarm clears. Because this ID is only unique
within a node, alarms on different nodes can have conflicting IDs.
EXAMPLES: Extension 12345 is off-hook on Node 1.
001,AG,,<Mon_Cross_Ref_ID>,1,1,12345,10,|Device [1.2.3] 'Ext. 12345'
 Is Off-Hook|,2
The extension 23456 called 911 on Node 2.
001,AG,,<Mon_Cross_Ref_ID>,1,2,23456,11,|Emergency Call Made By Device
 [1.2.3] 'Ext. 23456'|,1
The voice mail version is out of date.
001,AG,,<Mon_Cross_Ref_ID>,1,1,204,|Version Mismatch|,1
Extension 100 is off hook on Node 1. The system arbitrarily assigned this alarm unique ID 1.
001,AG,,<MONSYS>,1,1,100,10,|-01:326- 10:54 05-19 A010 ALARM Device 
[1.1.1] '100' Is Off Hook|,1
Extension 101 is off hook on Node 1. The system arbitrarily assigned this alarm unique ID 2.
002,AG,,<MONSYS>,1,1,101,10,|-01:327- 10:55 05-19 A010 ALARM Device
[1.2.1] '101' Is Off Hook|,2
Extension 100 is placed back on hook.
003,AG,,<MONSYS>,1,1,,0,|-01:328- 10:56 05-19 A000 ALARM Alarm
Automatically Cleared|,1
Extension 101 is placed back on hook.
004,AG,,<MONSYS>,1,1,,0,|-01:329- 10:57 05-19 A000 ALARM Alarm
Automatically Cleared|,2
GATEWAY IMPACTS: If the application has a system monitor started on only one node, the CT Gateway sends AG
events for that particular node only. If the application has a system monitor started on all
nodes, the CT Gateway sends AG events for all nodes.
NOTE: Because each node can have only one system alarm and network-wide alarm active at
any time, an application could receive AG events for multiple alarms yet receive notification for
only the last alarm cleared.

 */
public class AlarmGeneration {

}
